mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 29 ))
}
length(x[x<=14])/10000
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 30 ))
}
length(x[x<=14])/10000
mejor <- 0.7
peloton   <-  ( 501:599 ) / 1000
jugadores <-  c( mejor, peloton )
tiros <- c(6,9,11,12,14,16,18,19,21,23,24,26,28,30)
cortes <- 1:14
indice <- 1
total <- 0
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
indice
jugadores
total
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
indice
jugadores
vaciertos  <- mapply( ftirar, jugadores, tiros[indice]) #hago que los jugadores hagan 6 tiros
tiros_ronda = length(jugadores)*tiros[indice]
total <- total + tiros_ronda
jugadores <- jugadores[which(vaciertos>cortes[indice])] #elimino a los que hayan encestado 1 o menos tiros
indice <- indice+1
indice
jugadores
total
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
total
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
source("~/.active-rstudio-document")
jugadores
total
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 31 ))
}
length(x[x<=15])/10000
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 32 ))
}
length(x[x<=16])/10000
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 33 ))
}
length(x[x<=16])/10000
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 34 ))
}
length(x[x<=17])/10000
source("~/.active-rstudio-document")
jugadores
total
source("~/.active-rstudio-document")
jugadores
total
tiros <- c(6)
tail(tiros)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
tiros
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
tiros
cortes
k=1
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
length(x[x<=tail(cortes)+1])/10000<0.01
k=2
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
length(x[x<=tail(cortes)+1])/10000<0.01
k=3
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
length(x[x<=tail(cortes)+1])/10000<0.01
length(x[x<=tail(cortes)+1])/10000
source("~/ECD/DataMining/labo/src/CazaTalentos/script_01.R")
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 9))
}
length(x[x<=2])/10000
tail(cortes)
k=2
print(k)
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
if(length(x[x<=tail(cortes)+1])/10000<0.01)
length(x[x<=tail(cortes)+1])
length(x[x<=tail(cortes)+1])
k=3
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
if(length(x[x<=tail(cortes)+1])/10000<0.01)
{
tiros <- c(tiros,6+k)#cambiar el 1 por una i iterable
cortes <- c(cortes,tail(cortes)+1)
}
length(x[x<=tail(cortes)+1])/10000
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 9))
}
length(x[x<=2])/10000
x <- c()
tiros <- c(6)
k=3
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
length(x[x<=tail(cortes)+1])/10000
length(x[x<=tail(cortes)+1])/10000<0.01
source("~/.active-rstudio-document")
tiros
length(x[x<=tail(cortes)+1])/10000
tail(cortes)
x
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 56))
}
length(x[x<=2])/10000
length(x)
source("~/.active-rstudio-document")
tiros
cortes
mejor <- 0.7
x <- c()
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 7))
}
length(x[x<=2])/10000
mejor <- 0.7
tiros <- c(6)
cortes <- c(1)
k=2
for( i in 1:10000 )  #diez mil experimentos
{
x <- mapply( ftirar, mejor, 6+k ) #cambiar el 1 por una i iterable
}
length(x[x<=tail(cortes)+1])/10000
x
for( i in 1:10000 )  #diez mil experimentos
{
x <- mapply( ftirar, mejor, 6+k ) #cambiar el 1 por una i iterable
}
x
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
tiros
cortes
k=1
x <- c()
print(k)
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k )) #cambiar el 1 por una i iterable
}
if(length(x[x<=tail(cortes)+1])/10000<0.01)
{
tiros <- c(tiros,6+k)#cambiar el 1 por una i iterable
cortes <- c(cortes,tail(cortes)+1)
}
tiros
tiros <- c(6,9,11,12,14,16,18,19,21,23,24,26,28,30,31,33,35)
tiros +1
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
total
jugadores
vaciertos
tiros <- c(6,9,11,12,14,16,18,19,21,23,24,26,28,30,31,33,35, 37, 39)
jugadores
total
vaciertos
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
jugadores
vaciertos
total
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
jugadores
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
jugadores
vaciertos
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
jugadores
vaciertos
vaciertos <- vaciertos[which(vaciertos>cortes[indice])
vaciertos
vaciertos <- vaciertos[which(vaciertos>cortes[indice])]
vaciertos
#vaciertos <- vaciertos[which(vaciertos>cortes[indice])]
indice <- indice+1
jugadores
jugadores <- jugadores[which(vaciertos>cortes[indice])]
jugadores
vaciertos  <- vaciertos + mapply( ftirar, jugadores, tiros[indice])
vaciertos
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
vaciertos
vaciertos_acum
mejor <- 0.7
peloton   <-  ( 501:599 ) / 1000
jugadores <-  c( mejor, peloton )
tiros <- c(6,9,11,12,14,16,18,19,21,23,24,26,28,30,31,33,35, 37, 39)
cortes <- 1:19
indice <- 1
total <- 0
vaciertos_acum <- c()
vaciertos  <- mapply( ftirar, jugadores, tiros[indice])
vaciertos_acum  <- vaciertos_acum + vaciertos
vaciertos
vaciertos_acum
#vaciertos_acum  <- vaciertos_acum + vaciertos
vaciertos_acum <- sum(vaciertos_acum,vaciertos,na.rm = FALSE)
vaciertos_acum
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
vaciertos_acum
jugadores
total
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
total
length(jugadores)
vaciertos_acum
tiros <- c(6,9,11,12,14,16,18,19,21,23,24,26,28,30,31,33,35,37,39)+1
tiros
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
total
require("data.table")
set.seed( 102191 )
#calcula cuantos encestes logra un jugador con indice de enceste prob que hace qyt tiros libres
ftirar  <- function( prob, qty )
{
return( sum( runif(qty) < prob ) )
}
mejor <- 0.7
tiros <- c(6)
cortes <- c(1)
k=1
x <- c()
print(k)
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k ))
}
if(length(x[x<=tail(cortes)+1])/10000<0.01)
{
tiros <- c(tiros,6+k)
cortes <- c(cortes,tail(cortes)+1)
}
k=2
x <- c()
print(k)
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k ))
}
length(x[x<=tail(cortes)+1])/10000<0.01
if(length(x[x<=tail(cortes)+1])/10000<0.01)
{
tiros <- c(tiros,6+k)
cortes <- c(cortes,tail(cortes)+1)
}
tiros
cortes
k=3
x <- c()
print(k)
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k ))
}
length(x[x<=tail(cortes)+1])/10000<0.01
if(length(x[x<=tail(cortes)+1])/10000<0.01)
{
tiros <- c(tiros,6+k)
cortes <- c(cortes,tail(cortes)+1)
}
tiros
cortes
k=4
x <- c()
print(k)
for( i in 1:10000 )  #diez mil experimentos
{
x <- c(x,mapply( ftirar, mejor, 6+k ))
}
length(x[x<=tail(cortes)+1])/10000<0.01
tail(cortes)
tail(cortes,n=1)
source("~/ECD/DataMining/labo/src/CazaTalentos/script_03.R")
tiros
cortes
source("~/ECD/DataMining/labo/src/CazaTalentos/script_03.R")
tiros
cortes
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
#ganador <- c()
#for(m in 1:1000)
#{
for (i in 1:14)
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
total
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
print(vtotal)
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
total
floor((14000-total)/length(jugadores))
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
vaciertos_acum
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_01.R")
length(x[x<=2])/10000
source("~/ECD/DataMining/labo/src/CazaTalentos/script_01.R")
length(x[x<=2])/10000
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
restantes
vaciertos_acum
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
restantes
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
source("~/ECD/DataMining/labo/src/CazaTalentos/script_02.R")
